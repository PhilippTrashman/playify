name: Update Release Links on Publish

on:
  release:
    types: [published]

jobs:
  update-links:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository (checkout the branch the release targets)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.target_commitish }}
          fetch-depth: 0

      - name: Get the release version tag
        id: get_version
        run: echo "VERSION_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Update README.md and docs/self-host.html
        run: |
          VERSION_TAG="${{ env.VERSION_TAG }}"
          VERSION_NUMBER="${VERSION_TAG#v}"
          echo "New release detected. Tag: ${VERSION_TAG}, Number: ${VERSION_NUMBER}"

          sed -i "s|/releases/download/.*/Playify_Setup_v.*\.exe|/releases/download/${VERSION_TAG}/Playify_Setup_v${VERSION_NUMBER}.exe|g" README.md || true
          sed -i "s|/releases/download/.*/Playify_Setup_v.*\.exe|/releases/download/${VERSION_TAG}/Playify_Setup_v${VERSION_NUMBER}.exe|g" docs/self-host.html || true

      - name: Commit and push changes to target branch
        env:
          TARGET_BRANCH: ${{ github.event.release.target_commitish }}
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          git add README.md docs/self-host.html || true

          if ! git diff --staged --quiet; then
            git commit -m "chore: Update download links to version ${{ env.VERSION_TAG }}"
            git push origin "${TARGET_BRANCH}"
            echo "Changes committed and pushed to ${TARGET_BRANCH}."
          else
            echo "No changes to commit."
          fi
